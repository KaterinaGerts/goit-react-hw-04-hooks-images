{"version":3,"sources":["components/Button/Button.module.css","components/Container/Container.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/ImageGallery/ImageGallery.module.css","components/Loader/Loader.module.css","App.module.css","components/Container/Container.js","components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/Button/Button.jsx","components/ImageGallery/ImageGallery.jsx","services/card-api.js","components/Loader/Loader.jsx","components/Modal/Modal.jsx","App.js","index.js","components/Searchbar/Searchbar.module.css","components/Modal/Modal.module.css"],"names":["module","exports","Container","children","className","s","container","Searchbar","onSubmit","useState","cardName","setCardName","SearchForm","e","preventDefault","trim","toast","error","type","SearchFormButton","SearchFormButtonLabel","SearchFormInput","name","value","onChange","currentTarget","toLowerCase","autoComplete","autoFocus","placeholder","ImageGalleryItem","onClick","cards","webformatURL","tags","src","alt","width","height","Button","LoadButton","LoadButtonLabel","ImageGallery","onImageClick","map","id","largeImageURL","api","fetchImages","searchImages","page","fetch","then","response","ok","json","hits","Spinner","overlay","color","secondaryColor","timeout","modalRoot","document","querySelector","Modal","modalImage","onClose","onEscapeClick","code","useEffect","window","addEventListener","removeEventListener","createPortal","Overlay","target","Status","App","setCards","setError","status","setStatus","setPage","isShow","setIsShow","setModalImage","cardsApi","length","info","prevCards","catch","finally","scrollTo","top","documentElement","scrollHeight","behavior","toggleModal","div","message","autoClose","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.92f6039e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"LoadButton\":\"Button_LoadButton__2-8fm\",\"LoadButtonLabel\":\"Button_LoadButtonLabel__24cOg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__23kEK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__fr4qu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__b1NC3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Loader_overlay__2CsDf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"div\":\"App_div__1B_lO\"};","import React from 'react';\r\nimport s from './Container.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Container;\r\n","import { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport s from './Searchbar.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport React from 'react';\r\n\r\nconst Searchbar = ({ onSubmit }) => {\r\n  const [cardName, setCardName] = useState('');\r\n\r\n  const handleChange = e => {\r\n    const value = e.currentTarget.value;\r\n    setCardName(value.toLowerCase());\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if (cardName.trim() === '') {\r\n      toast.error(\"Oh no, you didn't write your request!\");\r\n      return;\r\n    }\r\n    onSubmit( cardName );\r\n    setCardName('');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <header className={s.Searchbar}>\r\n        <form className={s.SearchForm} onSubmit={handleSubmit}>\r\n          <button type=\"submit\" className={s.SearchFormButton}>\r\n            <span className={s.SearchFormButtonLabel}>Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className={s.SearchFormInput}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={cardName}\r\n            onChange={handleChange}\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Searchbar;\r\n\r\n// class Searchbar extends Component {\r\n//   state = {\r\n//     cardName: '',\r\n//   };\r\n\r\n//   handleChange = e => {\r\n//     const value = e.currentTarget.value;\r\n//     this.setState({ cardName: value.toLowerCase() });\r\n//   };\r\n\r\n//   handleSubmit = e => {\r\n//     e.preventDefault();\r\n\r\n//     const { cardName } = this.state;\r\n\r\n//     if (cardName.trim() === '') {\r\n//       toast.error(\"Oh no, you didn't write your request!\");\r\n//       return;\r\n//     }\r\n//     this.props.onSubmit({ cardName });\r\n//     this.reset();\r\n//   };\r\n\r\n//   reset = () => {\r\n//     this.setState({ cardName: '' });\r\n//   };\r\n\r\n//   render() {\r\n//     const { cardName } = this.state;\r\n//     return (\r\n//       <div>\r\n//         <header className={s.Searchbar}>\r\n//           <form className={s.SearchForm} onSubmit={this.handleSubmit}>\r\n//             <button type=\"submit\" className={s.SearchFormButton}>\r\n//               <span className={s.SearchFormButtonLabel}>Search</span>\r\n//             </button>\r\n\r\n//             <input\r\n//               className={s.SearchFormInput}\r\n//               type=\"text\"\r\n//               name=\"name\"\r\n//               value={cardName}\r\n//               onChange={this.handleChange}\r\n//               autoComplete=\"off\"\r\n//               autoFocus\r\n//               placeholder=\"Search images and photos\"\r\n//             />\r\n//           </form>\r\n//         </header>\r\n//       </div>\r\n//     );\r\n//   }\r\n// }\r\n\r\n// Searchbar.propTypes = {\r\n//   onSubmit: PropTypes.func.isRequired,\r\n// };\r\n\r\n// export default Searchbar;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from './ImageGalleryItem.module.css';\r\n\r\nexport default function ImageGalleryItem({\r\n  onClick,\r\n  cards: { webformatURL, tags },\r\n}) {\r\n  return (\r\n    <li className={s.ImageGalleryItem}>\r\n      <img\r\n        src={webformatURL}\r\n        alt={tags}\r\n        onClick={onClick}\r\n        className=\"ImageGalleryItem-image\"\r\n        width=\"200\"\r\n        height=\"150\"\r\n      />\r\n    </li>\r\n  );\r\n}\r\n\r\nImageGalleryItem.propTypes = {\r\n  src: PropTypes.string,\r\n  alt: PropTypes.string,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport s from './Button.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Button({ onClick }) {\r\n  return (\r\n    <div>\r\n      <button className={s.LoadButton} type=\"button\" onClick={onClick}>\r\n        <span className={s.LoadButtonLabel}>Load more</span>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImageGalleryItem from 'components/ImageGalleryItem';\r\nimport Button from 'components/Button';\r\nimport s from './ImageGallery.module.css';\r\n\r\nfunction ImageGallery({ cards, onClick, onImageClick }) {\r\n  return (\r\n    <div>\r\n      <ul className={s.ImageGallery}>\r\n        {cards.map(({ id, webformatURL, tags, largeImageURL }) => {\r\n          return (\r\n            <ImageGalleryItem\r\n              key={id}\r\n              cards={{ id, webformatURL, tags }}\r\n              onClick={() => onImageClick(largeImageURL)}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n      <Button onClick={onClick} />\r\n    </div>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number,\r\n      webformatURL: PropTypes.string,\r\n      largeImageURL: PropTypes.string,\r\n      tags: PropTypes.string,\r\n    }),\r\n  ),\r\n  onClick: PropTypes.func.isRequired,\r\n  onImageClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","const BASE_URL = 'https://pixabay.com/api/';\r\nconst KEY = '22269810-55457156398dac84727ab5964';\r\nconst perPage = '12';\r\n\r\nfunction fetchImages(searchImages, page) {\r\n  return fetch(\r\n    `${BASE_URL}?image_type=photo&orientation=horizontal&q=${searchImages}&page=${page}&per_page=${perPage}&key=${KEY}`,\r\n  )\r\n    .then(response => {\r\n      if (response.ok) {\r\n        return response.json();\r\n      }\r\n    })\r\n    .then(response => {\r\n      return response.hits;\r\n    });\r\n}\r\n\r\nconst api = {\r\n  fetchImages,\r\n};\r\n\r\nexport default api;\r\n","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport s from './Loader.module.css';\r\n\r\nexport default function Spinner() {\r\n  return (\r\n    <div className={s.overlay}>\r\n      <Loader\r\n        type=\"MutatingDots\"\r\n        color=\"#00BFFF\"\r\n        secondaryColor=\"#8a008a\"\r\n        height={100}\r\n        width={100}\r\n        timeout={3000} //3 secs\r\n      />\r\n      <div>Loading...</div>\r\n    </div>\r\n  );\r\n}\r\n","import { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport s from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal-root');\r\n\r\nfunction Modal({ modalImage, onClose }) {\r\n  const onEscapeClick = e => {\r\n    if (e.code === 'Escape') {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', onEscapeClick);\r\n    return () => {\r\n      window.removeEventListener('keydown', onEscapeClick);\r\n    };\r\n  });\r\n\r\n  const closeOverlay = e => {\r\n    if (e.currentTarget === e.target) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className={s.Overlay} onClick={closeOverlay}>\r\n      <div className={s.Modal}>\r\n        <img className={s.modalImage} src={modalImage} alt=\"\" width=\"500\" />\r\n      </div>\r\n    </div>,\r\n    modalRoot,\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n\r\n// export default class Modal extends Component {\r\n//   onEscapeClick = e => {\r\n//     if (e.code === 'Escape') {\r\n//       this.props.onClose();\r\n//     }\r\n//   };\r\n\r\n//   componentDidMount() {\r\n//     window.addEventListener('keydown', this.onEscapeClick);\r\n//   }\r\n\r\n//   componentWillUnmount() {\r\n//     window.removeEventListener('keydown', this.onEscapeClick);\r\n//   }\r\n\r\n//   closeOverlay = e => {\r\n//     if (e.currentTarget === e.target) {\r\n//       this.props.onClose();\r\n//     }\r\n//   };\r\n\r\n//   render() {\r\n//     const modalImage = this.props.modalImage;\r\n//     return createPortal(\r\n//       <div className={s.Overlay} onClick={this.closeOverlay}>\r\n//         <div className={s.Modal}>\r\n//           <img className={s.modalImage} src={modalImage} alt=\"\" width=\"500\" />\r\n//         </div>\r\n//       </div>,\r\n//       modalRoot,\r\n//     );\r\n//   }\r\n// }\r\n","import { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Container from 'components/Container';\nimport Searchbar from 'components/Searchbar';\nimport ImageGallery from 'components/ImageGallery';\nimport cardsApi from './services/card-api';\nimport Spinner from 'components/Loader';\nimport Modal from 'components/Modal';\nimport s from './App.module.css';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nfunction App() {\n  const [cardName, setCardName] = useState('');\n  const [cards, setCards] = useState([]);\n  const [error, setError] = useState(false);\n  const [status, setStatus] = useState(Status.IDLE);\n  const [page, setPage] = useState(1);\n  const [isShow, setIsShow] = useState(false);\n  const [modalImage, setModalImage] = useState('');\n\n  const handleFormSubmit = cardName => {\n    setCardName(cardName);\n    setPage(1);\n    setCards([]);\n  };\n\n  useEffect(() => {\n    if (!cardName) {\n      return;\n    }\n    const spinner = () => setStatus(Status.PENDING);\n\n    cardsApi\n      .fetchImages(cardName, page)\n      .then(cards => {\n        if (cards.length === 0) {\n          setStatus(Status.IDLE);\n          toast.info('Please, try again your request is not defind!');\n        } else {\n          setCards(\n            prevCards => [...prevCards, ...cards],\n            setStatus(Status.RESOLVED),\n          );\n        }\n      })\n      .catch(error => setError(error), setStatus(Status.REJECTED))\n      .finally(() => {\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: 'smooth',\n        });\n      });\n\n    spinner();\n  }, [cardName, page]);\n\n  const incrementPage = () => {\n    setPage(page => page + 1);\n  };\n\n  const toggleModal = modalImage => {\n    setIsShow(isShow => !isShow);\n    setModalImage(modalImage);\n  };\n\n  return (\n    <Container>\n      <div>\n        <Searchbar onSubmit={handleFormSubmit} />\n        {status === Status.IDLE && (\n          <div className={s.div}>Please, write a card name!</div>\n        )}\n        {status === Status.PENDING && <Spinner />}\n        {status === Status.REJECTED && <h1>{error.message}</h1>}\n        {status === Status.RESOLVED && (\n          <ImageGallery\n            cards={cards}\n            onClick={incrementPage}\n            onImageClick={toggleModal}\n          />\n        )}\n        {isShow && <Modal modalImage={modalImage} onClose={toggleModal} />}\n        <ToastContainer autoClose={3000} />\n      </div>\n    </Container>\n  );\n}\n\nexport default App;\n\n// const Status = {\n//   IDLE: 'idle',\n//   PENDING: 'pending',\n//   RESOLVED: 'resolved',\n//   REJECTED: 'rejected',\n// };\n\n// export class App extends Component {\n//   state = {\n//     cardName: '',\n//     cards: [],\n//     error: false,\n//     status: Status.IDLE,\n//     page: 1,\n//     isShow: false,\n//     modalImage: '',\n//   };\n\n//   handleFormSubmit = cardName => {\n//     this.setState(cardName);\n//     this.setState({ cards: [] });\n//     this.setState({ page: 1 });\n//   };\n\n//   componentDidUpdate(prevProps, prevState) {\n//     const prevCard = prevState.cardName;\n//     const nextCard = this.state.cardName;\n//     const prevPage = prevState.page;\n//     const nextPage = this.state.page;\n\n//     if (prevCard !== nextCard || prevPage !== nextPage) {\n//       this.setState({ status: Status.PENDING });\n\n//       cardsApi\n//         .fetchImages(nextCard, nextPage)\n//         .then(cards => {\n//           if (cards.length === 0) {\n//             this.setState({ status: Status.IDLE });\n//             toast.info('Please, try again your request is not defind!');\n//           } else {\n//             this.setState(prevState => {\n//               return {\n//                 cards: [...prevState.cards, ...cards],\n//                 status: Status.RESOLVED,\n//               };\n//             });\n//           }\n//         })\n//         .catch(error => this.setState({ error, status: Status.REJECTED }))\n//         .finally(() => {\n//           window.scrollTo({\n//             top: document.documentElement.scrollHeight,\n//             behavior: 'smooth',\n//           });\n//         });\n//     }\n//   }\n\n//   incrementPage = () => {\n//     this.setState(prevState => {\n//       return {\n//         page: prevState.page + 1,\n//       };\n//     });\n//   };\n\n//   toggleModal = modalImage => {\n//     this.setState(({ isShow }) => ({\n//       isShow: !isShow,\n//     }));\n//     this.setState({ modalImage });\n//   };\n\n//   render() {\n//     const { cards, error, status, isShow, modalImage } = this.state;\n\n//     return (\n//       <Container>\n//         <div>\n//           <Searchbar onSubmit={this.handleFormSubmit} />\n//           {status === Status.IDLE && (\n//             <div className={s.div}>Please, write a card name!</div>\n//           )}\n//           {status === Status.PENDING && <Spinner />}\n//           {status === Status.REJECTED && <h1>{error.message}</h1>}\n//           {status === Status.RESOLVED && (\n//             <ImageGallery\n//               cards={cards}\n//               onClick={this.incrementPage}\n//               onImageClick={this.toggleModal}\n//             />\n//           )}\n//           {isShow && (\n//             <Modal modalImage={modalImage} onClose={this.toggleModal} />\n//           )}\n//           <ToastContainer autoClose={3000} />\n//         </div>\n//       </Container>\n//     );\n//   }\n// }\n\n// export default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SearchFormButton\":\"Searchbar_SearchFormButton__3jZch\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__1Uys_\",\"SearchFormInput\":\"Searchbar_SearchFormInput__1NoaW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__2pKtC\",\"modalImage\":\"Modal_modalImage__2xODJ\"};"],"sourceRoot":""}